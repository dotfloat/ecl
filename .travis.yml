env:
  global:
    - REPO_DIR=.
    # Commit from your project that you want to build
    - BUILD_COMMIT=master
    # pip dependencies to _build_ your project. We need pybind11 because
    # otherwise the docker image can't find the includes even though it installs
    # fine via pip
    # - BUILD_DEPENDS=pybind11
    # pip dependencies to _test_ your project
    - TEST_DEPENDS=pytest
    # amd64 fo' lyfe
    - PLAT=x86_64
    # Tell multibuild to use manylinux2010 docker image (mostly due to cmake's
    # pypi package not having manylinux1 wheel)
    - MB_ML_VER=2010

# You will likely prefer "language: generic" for travis configuration, rather
# than, say "language: python". Multibuild doesn't use Travis-provided Python
# but rather installs and uses its own, where the Python version is set from the
# MB_PYTHON_VERSION variable. You can still specify a language here if you need
# it for some unrelated logic and you can't use Multibuild-provided Python or
# other software present on a builder.
language: generic

# For CPython macOS builds only, the minimum supported macOS version and
# architectures of any C extensions in the wheel are set with the variable
# MB_PYTHON_OSX_VER: 10.9 (64-bit only) or 10.6 (64/32-bit dual arch). By
# default this is set to the highest available for the Python version selected
# using MB_PYTHON_VERSION. You should only need to set this explicitly if you
# are building a 10.6 dual-arch build for a CPython version where both a 10.9
# and 10.6 build are available (for example, 2.7 or 3.7). All PyPy macOS builds
# are 64-bit only.

# Required in Linux to invoke `docker` ourselves
services: docker

# Host distribution. This is the distribution from which we run the build and
# test containers, via docker.
dist: xenial

matrix:
  fast_finish: true
  include:
    - os: linux
      env: MB_PYTHON_VERSION=2.7
    - os: linux
      env: MB_PYTHON_VERSION=3.6
    - os: osx
      python: 2.7
      env: MB_PYTHON_VERSION=2.7
    - os: osx
      python: 3.6
      env: MB_PYTHON_VERSION=3.6

before_install:
  # Test the C stuff before building a Python wheel
  # - pip install --upgrade pip scikit-build pybind11
  # - pip install -e .
  # - pip install -r requirements-dev.txt
  # - python setup.py build -- -DBUILD_TESTS=ON
  # - pushd $(python -c "import skbuild; print(skbuild.constants.CMAKE_BUILD_DIR())")
  # - ln -s lib64 bin/.lib64
  # - ctest --output-on-error
  # - popd

  # Use multibuild to build a Python wheel
  - source multibuild/common_utils.sh
  - source multibuild/travis_steps.sh
  #- pip install --upgrade pip wheel
  - before_install

install:
  - clean_code $REPO_DIR $TRAVIS_COMMIT
  - build_wheel $REPO_DIR $PLAT
  # - pip install pytest wheelhouse/*

script:
  - install_run $PLAT

before_deploy:
  # Travis doesn't really support uploading wheelhouses. However, we can trick
  # it by moving the wheelhouse directory to dist/, whose contents travis will
  # happily upload to PyPI
  - mv wheelhouse dist

  # Make a source distribution for good measure
  - pip install -r requirements-dev.txt
  - python setup.py sdist

  # Hack! "python setup.py sdist" will succeed now without ruining our hard work
  - rm setup.py
  - touch setup.py

deploy:
  - provider: pypi
    skip_existing: true
    skip_upload_docs: true
    skip_cleanup: true
    server: https://test.pypi.org/legacy/
    user: __token__
    password:
      secure: cZE0yn4nPhJfgD+D8VFY7tn7arJCOxHidRX/2NP3PTs72chrudtDHR6sPu/sAKVEQ4bKvFjT3OeBkZFgiTYNtDfrkTdawwaeIgdPodgLATWLcbf3iQwBtGUpgM3aPqZDFNukNa91ddU7ESo/Xx1vHDAJ6rBGrG+luPDL4GR9WmyoS4Cro0aHQPlcU4uGekSQyDRotGq03ZxtQrX+5qlLiYolbWmf2xH7+RY5d2DtspLahvi7c9QqZzq43McuU+1Khraoxed/yXoFTEMHIuZ+xeXoe+d5zgPlS/sfw3pVmfSesbP7ttKkMUmxF+8stliDqI4//n4y8GXz5XE12mhUqxVX67SrTmA6Pd5BYIg8ZUD+dv9vfmdI6UyfIXBynQfCk6chQUoF4LhuirOeMucJ6+xpFxRmkM/APKPijMYCS7zGucGbWTPcwNgwFcJxYqiReM9GhKZuuywbJA7lUz/hdXW27KJVvYrfFjVWkL2cb46ol7SZYLWEBNtyGeCfwroHp1uSM4/St7NLYJiYmS1E2tF+DvHuppw8pa4mhZTDR3XI69E1oFeLTbrWSANWfWZvew0s0LVfO7ba3a7u79uDc7/lHZrF4KNu3CQxpUc38ZlGaONXa5YKTl5cBKTya9EV6qJWEcaVhyT6OOF/S/Jud1FKBX9iz1MMPbHDkbwXR/s=
    on:
      tags: true
